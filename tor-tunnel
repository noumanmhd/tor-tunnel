#!/bin/bash

export BLUE='\033[1;94m'
export GREEN='\033[1;92m'
export RED='\033[1;91m'
export RESETCOLOR='\033[1;00m'

# Destinations you don't want routed through Tor
TOR_EXCLUDE="192.168.0.0/16 172.16.0.0/12 10.0.0.0/8"

# The UID Tor runs as
# change it if, starting tor, the command 'ps -e | grep tor' returns a different UID
TOR_UID="debian-tor"

# Tor's TransPort
TOR_PORT="9040"

CMD=$1

function init {
	# Make sure only root can run our script
	if [ $(id -u) -ne 0 ]; then
		echo -e "\n$GREEN[$RED!$GREEN] $RED THIS SCRIPT MUST BE RUN AS ROOT!!!$RESETCOLOR\n" >&2
		sudo $0 $CMD
		exit 0
	fi
}

function ip {
	echo -e $GREEN
	checkip
}

function start {
	echo -e "\n$GREEN[$BLUE i$GREEN ]$BLUE Starting Tor Tunnel:$RESETCOLOR\n"
	
	if ! pidof tor > /dev/null; then
		echo -e " $RED*$BLUE Tor is not running! \n$GREEN Starting Tor$BLUE ...$RESETCOLOR\n" >&2
		systemctl start tor
		sleep 2
	fi
	if ! [ -f /etc/network/iptables.rules ]; then
		iptables-save > /etc/network/iptables.rules
		echo -e " $GREEN*$BLUE Saved iptables rules!!!$RESETCOLOR\n"
	fi
	
	iptables -F
	iptables -t nat -F
	
	if ! cat /etc/resolv.conf | grep 'tor-tunnel' > /dev/null;then
		cp /etc/resolv.conf /etc/resolv.conf.bak
		touch /etc/resolv.conf
		echo -e 'nameserver 127.0.0.1 # tor-tunnel' > /etc/resolv.conf
		echo -e " $GREEN*$BLUE Modified resolv.conf to use Tor DNS!!!"
	fi
	

	# set iptables nat
	iptables -t nat -A OUTPUT -m owner --uid-owner $TOR_UID -j RETURN
	iptables -t nat -A OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 9053
	iptables -t nat -A OUTPUT -p tcp --dport 53 -j REDIRECT --to-ports 9053
	iptables -t nat -A OUTPUT -p udp -m owner --uid-owner $TOR_UID -m udp --dport 53 -j REDIRECT --to-ports 9053
	
	#resolve .onion domains mapping 10.192.0.0/10 address space
	iptables -t nat -A OUTPUT -p tcp -d 10.192.0.0/10 -j REDIRECT --to-ports 9040
	iptables -t nat -A OUTPUT -p udp -d 10.192.0.0/10 -j REDIRECT --to-ports 9040
	
	#exclude local addresses
	for NET in $TOR_EXCLUDE 127.0.0.0/9 127.128.0.0/10; do
		iptables -t nat -A OUTPUT -d $NET -j RETURN
	done
	
	#redirect all other output through TOR
	iptables -t nat -A OUTPUT -p tcp --syn -j REDIRECT --to-ports $TOR_PORT
	iptables -t nat -A OUTPUT -p udp -j REDIRECT --to-ports $TOR_PORT
	iptables -t nat -A OUTPUT -p icmp -j REDIRECT --to-ports $TOR_PORT
	
	#accept already established connections
	iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
	
	#exclude local addresses
	for NET in $TOR_EXCLUDE 127.0.0.0/8; do
		iptables -A OUTPUT -d $NET -j ACCEPT
	done
	
	#allow only tor output
	iptables -A OUTPUT -m owner --uid-owner $TOR_UID -j ACCEPT
	iptables -A OUTPUT -j REJECT

	echo -e "$GREEN *$BLUE All traffic will redirected through Tor!!!$RESETCOLOR\n"
	echo -e "$GREEN[$BLUE i$GREEN ]$BLUE You are under Tor tunnel!!!$RESETCOLOR\n"
}


function stop {
	echo -e "\n$GREEN[$BLUE i$GREEN ]$BLUE Stopping Tor Tunnel:$RESETCOLOR\n"

	iptables -F
	iptables -t nat -F
	echo -e " $GREEN*$BLUE Deleted all iptables rules!!!$RESETCOLOR\n"
	
	if [ -f /etc/network/iptables.rules ]; then
		iptables-restore < /etc/network/iptables.rules
		rm /etc/network/iptables.rules
		echo -e " $GREEN*$BLUE IPTABLES RULES RESTORED!!!"
	fi
	
	
	if [ -e /etc/resolv.conf.bak ]; then
		rm /etc/resolv.conf
		cp /etc/resolv.conf.bak /etc/resolv.conf
	fi
		
	echo -e " $GREEN*$BLUE Tor Tunnel mode Stopped!!!$RESETCOLOR\n"
}

function change {
	systemctl stop tor
	systemctl start tor
	sleep 2
	echo -e " $GREEN*$BLUE Tor daemon reloaded and forced to change Nodes!!!$RESETCOLOR\n"
}

function status {
	systemctl status tor
}

case "$1" in
	start)
		init
		start
	;;
	stop)
		init
		stop
	;;
	change)
		init
		change
	;;
	status)
		status
	;;
	myip|ip)
		ip
	;;
	restart)
		init
		$0 stop
		sleep 1
		$0 start
	;;
   *)
echo -e "
Tunnel all traffic with Tor Module
	Usage:
	$RED┌──[$GREEN$USER$YELLOW@$BLUE`hostname`$RED]─[$GREEN$PWD$RED]
	$RED└──╼ \$$GREEN"" tor-tunnel $RED{$GREEN""start$RED|$GREEN""stop$RED|$GREEN""restart$RED|$GREEN""change$RED""$RED|$GREEN""status$RED""}
	
	$RED start$BLUE -$GREEN Start Tor and 
		  tunnel whole traffic through TOR using iptables	  
	$RED stop$BLUE -$GREEN Stop tunnel and
		  Reset original iptables setting
	$RED restart$BLUE -$GREEN Combines \"stop\" and \"start\" options
	$RED change$BLUE -$GREEN Changes identity restarting TOR
	$RED status$BLUE -$GREEN Check if TOR is working properly
	$RED myip$BLUE -$GREEN Show your current IP address
	
$RESETCOLOR" >&2
exit 1
;;
esac

echo -e $RESETCOLOR
exit 0
